{
  "stats": {
    "suites": 1,
    "tests": 16,
    "passes": 15,
    "pending": 0,
    "failures": 1,
    "start": "2024-12-12T13:15:38.732Z",
    "end": "2024-12-12T13:15:41.337Z",
    "duration": 2605,
    "testsRegistered": 16,
    "passPercent": 93.75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "08d046e9-ba96-44a9-bf64-d8884821efac",
      "title": "",
      "fullFile": "F:\\Automation Projects\\WithSecure_Assignment\\WithSecure\\test\\triangleCalculationtest.js",
      "file": "\\test\\triangleCalculationtest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "590072a2-997d-40f6-acc7-32d0a6116432",
          "title": "Validating GET End point",
          "fullFile": "F:\\Automation Projects\\WithSecure_Assignment\\WithSecure\\test\\triangleCalculationtest.js",
          "file": "\\test\\triangleCalculationtest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Retrieve app version with correct url",
              "fullTitle": "Validating GET End point Retrieve app version with correct url",
              "timedOut": false,
              "duration": 241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "await request.get('/version').then((res) => {\n    expect(res.statusCode).to.equal(200);\n    expect(res.text).to.equal(\"0.0.2\");\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at file:///F:/Automation%20Projects/WithSecure_Assignment/WithSecure/test/triangleCalculationtest.js:16:39\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async Context.<anonymous> (file:///F:/Automation%20Projects/WithSecure_Assignment/WithSecure/test/triangleCalculationtest.js:15:9)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "58211330-22dd-4dba-9128-1f9dc54936fd",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the equilateral triangle",
              "fullTitle": "Validating GET End point Verify the equilateral triangle",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when a = b = c\"]).then((res) => {\n    expect(res.statusCode).to.equal(200);\n    expect(res.body.result).to.equal(\"This is equilateral triangle\");\n});",
              "err": {},
              "uuid": "9eae0b1c-dc35-42a5-91a7-95951cf955ce",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify two equal side and one different[isosceles triangle]",
              "fullTitle": "Validating GET End point Verify two equal side and one different[isosceles triangle]",
              "timedOut": false,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when a = b =! c\"]).then((res) => {\n    expect(res.statusCode).to.equal(201);\n    expect(res.body.result).to.equal(\"This is isosceles triangle\");\n});",
              "err": {},
              "uuid": "56c265a0-f3e1-4dc7-bc18-b59c702ade9d",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify valid three sides are different",
              "fullTitle": "Validating GET End point Verify valid three sides are different",
              "timedOut": false,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when a =! b =! c\"]).then((res) => {\n    expect(res.statusCode).to.equal(200);\n    expect(res.body.result).to.equal(\"This is versatile triangle\");\n});",
              "err": {},
              "uuid": "f886e8ff-5da6-4572-9259-64f02f92ba1e",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Sum of two side should be greater than 3rd side[when a + b < c]",
              "fullTitle": "Validating GET End point Verify Sum of two side should be greater than 3rd side[when a + b < c]",
              "timedOut": false,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when a + b < c\"]).then((res) => {\n    expect(res.statusCode).to.equal(418);\n    expect(res.body.error).to.equal(\"Sum of any 2 sides should be greater than the 3rd\");\n});",
              "err": {},
              "uuid": "22f8f614-441c-48a5-8949-ea7ae24f6e57",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Sum of two side should be greater than 3rd side[when b + c < a]",
              "fullTitle": "Validating GET End point Verify Sum of two side should be greater than 3rd side[when b + c < a]",
              "timedOut": false,
              "duration": 207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when b + c < a\"]).then((res) => {\n    expect(res.statusCode).to.equal(418);\n    expect(res.body.error).to.equal(\"Sum of any 2 sides should be greater than the 3rd\");\n});",
              "err": {},
              "uuid": "c33b91ca-6b3b-4f97-a9ad-0c9b2aad77bf",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify Sum of two side should be greater than 3rd side[when a + c < b]",
              "fullTitle": "Validating GET End point Verify Sum of two side should be greater than 3rd side[when a + c < b]",
              "timedOut": false,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when a + c < b\"]).then((res) => {\n    expect(res.statusCode).to.equal(418);\n    expect(res.body.error).to.equal(\"Sum of any 2 sides should be greater than the 3rd\");\n});",
              "err": {},
              "uuid": "01806b66-56e3-48e4-9d7d-ad740d6379ab",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the validation when triangle all side are zero",
              "fullTitle": "Validating GET End point Verify the validation when triangle all side are zero",
              "timedOut": false,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when sides are zero\"]).then((res) => {\n    expect(res.statusCode).to.equal(422);\n    expect(res.body.error).to.equal(\"All triangle sides should be greater than 0\");\n});",
              "err": {},
              "uuid": "6c595fb1-a343-488b-a213-bb51590e9a82",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the validation when triangle all side are minus values",
              "fullTitle": "Validating GET End point Verify the validation when triangle all side are minus values",
              "timedOut": false,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when sides are minus\"]).then((res) => {\n    expect(res.statusCode).to.equal(422);\n    expect(res.body.error).to.equal(\"All triangle sides should be greater than 0\");\n});",
              "err": {},
              "uuid": "508fba1b-d9a0-4cf1-b752-b8798f72f859",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the validation when triangle all side have decimal values",
              "fullTitle": "Validating GET End point Verify the validation when triangle all side have decimal values",
              "timedOut": false,
              "duration": 143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when sides are with decimal values\"]).then((res) => {\n    expect(res.statusCode).to.equal(200);\n    expect(res.body.result).to.equal(\"This is versatile triangle\");\n});",
              "err": {},
              "uuid": "e3778647-d55b-4374-a5f5-32fe74513a9f",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the when triangle sides are very small",
              "fullTitle": "Validating GET End point Verify the when triangle sides are very small",
              "timedOut": false,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when sides are very small\"]).then((res) => {\n    expect(res.statusCode).to.equal(201);\n    expect(res.body.result).to.equal(\"This is isosceles triangle\");\n});",
              "err": {},
              "uuid": "695b6bb0-8147-43ad-83c4-e36ee3de9958",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the when triangle sides are very big",
              "fullTitle": "Validating GET End point Verify the when triangle sides are very big",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when sides are very big\"]).then((res) => {\n    expect(res.statusCode).to.equal(201);\n    expect(res.body.result).to.equal(\"This is isosceles triangle\");\n});",
              "err": {},
              "uuid": "b1f1c758-4977-456e-84c7-309090713d93",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the when triangle sides are string",
              "fullTitle": "Validating GET End point Verify the when triangle sides are string",
              "timedOut": false,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when sides are string\"]).then((res) => {\n    expect(res.statusCode).to.equal(422);\n    expect(res.body.error).to.equal(\"All triangle sides should be numeric\");\n});",
              "err": {},
              "uuid": "1712bf66-a13d-40b2-b160-82d519514d21",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the when one triangle side is null",
              "fullTitle": "Validating GET End point Verify the when one triangle side is null",
              "timedOut": false,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when one sides is null\"]).then((res) => {\n    expect(res.statusCode).to.equal(422);\n    expect(res.body.error).to.equal(\"All triangle sides should be greater than 0\");\n});",
              "err": {},
              "uuid": "6bbc9fa8-5433-44fb-9cc0-329e1d77f578",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the when one triangle side is missing",
              "fullTitle": "Validating GET End point Verify the when one triangle side is missing",
              "timedOut": false,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"when one sides is missing\"]).then((res) => {\n    expect(res.statusCode).to.equal(422);\n    expect(res.body.error).to.equal(\"Triangle should have 3 side\");\n});",
              "err": {},
              "uuid": "9b0c5bfe-1fe4-4777-bd51-8be4ed3a6398",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the triangle with one additional side",
              "fullTitle": "Validating GET End point Verify the triangle with one additional side",
              "timedOut": false,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request.post('/').send(data[\"with additional side\"]).then((res) => {\n    expect(res.statusCode).to.equal(200);\n    expect(res.body.result).to.equal(\"This is versatile triangle\");\n});",
              "err": {},
              "uuid": "a5dce576-d5cc-4087-a20b-fbbed7e46c7d",
              "parentUUID": "590072a2-997d-40f6-acc7-32d0a6116432",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9eae0b1c-dc35-42a5-91a7-95951cf955ce",
            "56c265a0-f3e1-4dc7-bc18-b59c702ade9d",
            "f886e8ff-5da6-4572-9259-64f02f92ba1e",
            "22f8f614-441c-48a5-8949-ea7ae24f6e57",
            "c33b91ca-6b3b-4f97-a9ad-0c9b2aad77bf",
            "01806b66-56e3-48e4-9d7d-ad740d6379ab",
            "6c595fb1-a343-488b-a213-bb51590e9a82",
            "508fba1b-d9a0-4cf1-b752-b8798f72f859",
            "e3778647-d55b-4374-a5f5-32fe74513a9f",
            "695b6bb0-8147-43ad-83c4-e36ee3de9958",
            "b1f1c758-4977-456e-84c7-309090713d93",
            "1712bf66-a13d-40b2-b160-82d519514d21",
            "6bbc9fa8-5433-44fb-9cc0-329e1d77f578",
            "9b0c5bfe-1fe4-4777-bd51-8be4ed3a6398",
            "a5dce576-d5cc-4087-a20b-fbbed7e46c7d"
          ],
          "failures": [
            "58211330-22dd-4dba-9128-1f9dc54936fd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2465,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}